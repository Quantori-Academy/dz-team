/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as ReagentsListImport } from "./routes/reagentsList";
import { Route as LoginImport } from "./routes/login";
import { Route as AppImport } from "./routes/_app";
import { Route as AppIndexImport } from "./routes/_app/index";
import { Route as AppDevImport } from "./routes/_app/dev";

// Create/Update Routes

const ReagentsListRoute = ReagentsListImport.update({
    path: "/reagentsList",
    getParentRoute: () => rootRoute,
} as any);

const LoginRoute = LoginImport.update({
    path: "/login",
    getParentRoute: () => rootRoute,
} as any);

const AppRoute = AppImport.update({
    id: "/_app",
    getParentRoute: () => rootRoute,
} as any);

const AppIndexRoute = AppIndexImport.update({
    path: "/",
    getParentRoute: () => AppRoute,
} as any);

const AppDevRoute = AppDevImport.update({
    path: "/dev",
    getParentRoute: () => AppRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
    interface FileRoutesByPath {
        "/_app": {
            id: "/_app";
            path: "";
            fullPath: "";
            preLoaderRoute: typeof AppImport;
            parentRoute: typeof rootRoute;
        };
        "/login": {
            id: "/login";
            path: "/login";
            fullPath: "/login";
            preLoaderRoute: typeof LoginImport;
            parentRoute: typeof rootRoute;
        };
        "/reagentsList": {
            id: "/reagentsList";
            path: "/reagentsList";
            fullPath: "/reagentsList";
            preLoaderRoute: typeof ReagentsListImport;
            parentRoute: typeof rootRoute;
        };
        "/_app/dev": {
            id: "/_app/dev";
            path: "/dev";
            fullPath: "/dev";
            preLoaderRoute: typeof AppDevImport;
            parentRoute: typeof AppImport;
        };
        "/_app/": {
            id: "/_app/";
            path: "/";
            fullPath: "/";
            preLoaderRoute: typeof AppIndexImport;
            parentRoute: typeof AppImport;
        };
    }
}

// Create and export the route tree

interface AppRouteChildren {
    AppDevRoute: typeof AppDevRoute;
    AppIndexRoute: typeof AppIndexRoute;
}

const AppRouteChildren: AppRouteChildren = {
    AppDevRoute: AppDevRoute,
    AppIndexRoute: AppIndexRoute,
};

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren);

export interface FileRoutesByFullPath {
    "": typeof AppRouteWithChildren;
    "/login": typeof LoginRoute;
    "/reagentsList": typeof ReagentsListRoute;
    "/dev": typeof AppDevRoute;
    "/": typeof AppIndexRoute;
}

export interface FileRoutesByTo {
    "/login": typeof LoginRoute;
    "/reagentsList": typeof ReagentsListRoute;
    "/dev": typeof AppDevRoute;
    "/": typeof AppIndexRoute;
}

export interface FileRoutesById {
    __root__: typeof rootRoute;
    "/_app": typeof AppRouteWithChildren;
    "/login": typeof LoginRoute;
    "/reagentsList": typeof ReagentsListRoute;
    "/_app/dev": typeof AppDevRoute;
    "/_app/": typeof AppIndexRoute;
}

export interface FileRouteTypes {
    fileRoutesByFullPath: FileRoutesByFullPath;
    fullPaths: "" | "/login" | "/reagentsList" | "/dev" | "/";
    fileRoutesByTo: FileRoutesByTo;
    to: "/login" | "/reagentsList" | "/dev" | "/";
    id: "__root__" | "/_app" | "/login" | "/reagentsList" | "/_app/dev" | "/_app/";
    fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
    AppRoute: typeof AppRouteWithChildren;
    LoginRoute: typeof LoginRoute;
    ReagentsListRoute: typeof ReagentsListRoute;
}

const rootRouteChildren: RootRouteChildren = {
    AppRoute: AppRouteWithChildren,
    LoginRoute: LoginRoute,
    ReagentsListRoute: ReagentsListRoute,
};

export const routeTree = rootRoute
    ._addFileChildren(rootRouteChildren)
    ._addFileTypes<FileRouteTypes>();

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/login",
        "/reagentsList"
      ]
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/dev",
        "/_app/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/reagentsList": {
      "filePath": "reagentsList.tsx"
    },
    "/_app/dev": {
      "filePath": "_app/dev.tsx",
      "parent": "/_app"
    },
    "/_app/": {
      "filePath": "_app/index.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
