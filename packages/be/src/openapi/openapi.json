{
    "openapi": "3.0.3",
    "info": {
        "title": "Fastify API",
        "description": "API documentation for Luna",
        "version": "1.0.0"
    },
    "components": {
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "description": "Enter JWT token in the format 'Bearer <token>'"
            }
        },
        "schemas": {
            "Reagent": {
                "type": "object",
                "properties": {
                    "unit": {
                        "type": "string",
                        "enum": ["ml", "l", "mg", "g", "oz", "lb"]
                    },
                    "container": {
                        "type": "string",
                        "enum": ["bottle", "box", "other"],
                        "nullable": true
                    },
                    "currency": {
                        "type": "string",
                        "enum": ["usd", "euro", "rub", "cny", "jpy"]
                    },
                    "category": {
                        "type": "string",
                        "enum": ["reagent", "sample"]
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "organic",
                            "inorganic",
                            "acidic",
                            "basic",
                            "oxidizing",
                            "reducing",
                            "precipitating",
                            "complexing",
                            "indicator",
                            "other"
                        ],
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "enum": ["available", "lowStock", "outOfStock", "ordered", "notAvailable"],
                        "nullable": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "structure": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "number"
                    },
                    "quantityInit": {
                        "type": "number",
                        "nullable": true
                    },
                    "expirationDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "storageLocation": {
                        "type": "string",
                        "nullable": true
                    },
                    "cas": {
                        "type": "string",
                        "nullable": true
                    },
                    "producer": {
                        "type": "string",
                        "nullable": true
                    },
                    "catalogId": {
                        "type": "string",
                        "nullable": true
                    },
                    "catalogLink": {
                        "type": "string",
                        "nullable": true
                    },
                    "pricePerUnit": {
                        "type": "number",
                        "nullable": true
                    },
                    "deletedAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "storageId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    }
                },
                "required": [
                    "unit",
                    "currency",
                    "category",
                    "id",
                    "name",
                    "description",
                    "quantity",
                    "createdAt",
                    "updatedAt"
                ],
                "additionalProperties": false
            },
            "ReagentsList": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "unit": {
                                    "type": "string",
                                    "enum": ["ml", "l", "mg", "g", "oz", "lb"]
                                },
                                "container": {
                                    "type": "string",
                                    "enum": ["bottle", "box", "other"],
                                    "nullable": true
                                },
                                "currency": {
                                    "type": "string",
                                    "enum": ["usd", "euro", "rub", "cny", "jpy"]
                                },
                                "category": {
                                    "type": "string",
                                    "enum": ["reagent", "sample"]
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "organic",
                                        "inorganic",
                                        "acidic",
                                        "basic",
                                        "oxidizing",
                                        "reducing",
                                        "precipitating",
                                        "complexing",
                                        "indicator",
                                        "other"
                                    ],
                                    "nullable": true
                                },
                                "status": {
                                    "type": "string",
                                    "enum": [
                                        "available",
                                        "lowStock",
                                        "outOfStock",
                                        "ordered",
                                        "notAvailable"
                                    ],
                                    "nullable": true
                                },
                                "id": {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "structure": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "description": {
                                    "type": "string"
                                },
                                "quantity": {
                                    "type": "number"
                                },
                                "quantityInit": {
                                    "type": "number",
                                    "nullable": true
                                },
                                "expirationDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true
                                },
                                "storageLocation": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "cas": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "producer": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "catalogId": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "catalogLink": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "pricePerUnit": {
                                    "type": "number",
                                    "nullable": true
                                },
                                "deletedAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true
                                },
                                "createdAt": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "updatedAt": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "storageId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true
                                }
                            },
                            "required": [
                                "unit",
                                "currency",
                                "category",
                                "id",
                                "name",
                                "description",
                                "quantity",
                                "createdAt",
                                "updatedAt"
                            ],
                            "additionalProperties": false
                        }
                    },
                    "meta": {
                        "type": "object",
                        "properties": {
                            "currentPage": {
                                "type": "number",
                                "default": 1
                            },
                            "totalPages": {
                                "type": "number",
                                "default": 4
                            },
                            "totalCount": {
                                "type": "number",
                                "default": 2
                            },
                            "hasNextPage": {
                                "type": "boolean",
                                "default": true
                            },
                            "hasPreviousPage": {
                                "type": "boolean",
                                "default": false
                            }
                        },
                        "additionalProperties": false
                    }
                },
                "required": ["data", "meta"],
                "additionalProperties": false
            },
            "User": {
                "type": "object",
                "properties": {
                    "role": {
                        "type": "string",
                        "enum": ["admin", "procurementOfficer", "researcher"]
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "username": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "lastLoginDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "role",
                    "id",
                    "username",
                    "firstName",
                    "lastName",
                    "email",
                    "createdAt",
                    "updatedAt"
                ],
                "additionalProperties": false
            },
            "UsersList": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "role": {
                            "type": "string",
                            "enum": ["admin", "procurementOfficer", "researcher"]
                        },
                        "id": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "username": {
                            "type": "string"
                        },
                        "firstName": {
                            "type": "string"
                        },
                        "lastName": {
                            "type": "string"
                        },
                        "email": {
                            "type": "string"
                        },
                        "lastLoginDate": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "createdAt": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    "required": [
                        "role",
                        "id",
                        "username",
                        "firstName",
                        "lastName",
                        "email",
                        "createdAt",
                        "updatedAt"
                    ],
                    "additionalProperties": false
                }
            },
            "UserRegistration": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                    },
                    "firstName": {
                        "type": "string",
                        "minLength": 1
                    },
                    "lastName": {
                        "type": "string",
                        "minLength": 1
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "minLength": 8
                    },
                    "confirmPassword": {
                        "type": "string",
                        "minLength": 8
                    },
                    "role": {
                        "type": "string",
                        "enum": ["admin", "researcher", "procurementOfficer"]
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "username",
                    "firstName",
                    "lastName",
                    "email",
                    "password",
                    "confirmPassword",
                    "role"
                ],
                "additionalProperties": false
            },
            "Sample": {
                "type": "object",
                "properties": {
                    "unit": {
                        "type": "string",
                        "enum": ["ml", "l", "mg", "g", "oz", "lb"]
                    },
                    "category": {
                        "type": "string",
                        "enum": ["reagent", "sample"]
                    },
                    "container": {
                        "type": "string",
                        "enum": ["bottle", "box", "other"],
                        "nullable": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "structure": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "number"
                    },
                    "quantityInit": {
                        "type": "number",
                        "nullable": true
                    },
                    "storageLocation": {
                        "type": "string",
                        "nullable": true
                    },
                    "deletedAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "storageId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "unit",
                    "category",
                    "id",
                    "name",
                    "description",
                    "quantity",
                    "createdAt",
                    "updatedAt",
                    "storageId"
                ],
                "additionalProperties": false
            },
            "SamplesList": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "unit": {
                            "type": "string",
                            "enum": ["ml", "l", "mg", "g", "oz", "lb"]
                        },
                        "category": {
                            "type": "string",
                            "enum": ["reagent", "sample"]
                        },
                        "container": {
                            "type": "string",
                            "enum": ["bottle", "box", "other"],
                            "nullable": true
                        },
                        "id": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "name": {
                            "type": "string"
                        },
                        "structure": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": {
                            "type": "string"
                        },
                        "quantity": {
                            "type": "number"
                        },
                        "quantityInit": {
                            "type": "number",
                            "nullable": true
                        },
                        "storageLocation": {
                            "type": "string",
                            "nullable": true
                        },
                        "deletedAt": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "createdAt": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "storageId": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "required": [
                        "unit",
                        "category",
                        "id",
                        "name",
                        "description",
                        "quantity",
                        "createdAt",
                        "updatedAt",
                        "storageId"
                    ],
                    "additionalProperties": false
                }
            },
            "StorageLocationsList": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                "room": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "deletedAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true
                                },
                                "createdAt": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "updatedAt": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            },
                            "required": ["id", "room", "name", "createdAt", "updatedAt"],
                            "additionalProperties": false
                        }
                    },
                    "meta": {
                        "type": "object",
                        "properties": {
                            "currentPage": {
                                "type": "number",
                                "default": 1
                            },
                            "totalPages": {
                                "type": "number",
                                "default": 4
                            },
                            "totalCount": {
                                "type": "number",
                                "default": 2
                            },
                            "hasNextPage": {
                                "type": "boolean",
                                "default": true
                            },
                            "hasPreviousPage": {
                                "type": "boolean",
                                "default": false
                            }
                        },
                        "additionalProperties": false
                    }
                },
                "required": ["data", "meta"],
                "additionalProperties": false
            },
            "StorageLocation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "room": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "deletedAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": ["id", "room", "name", "createdAt", "updatedAt"],
                "additionalProperties": false
            },
            "UserLogin": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50,
                        "description": "Username",
                        "example": "admin"
                    },
                    "password": {
                        "type": "string",
                        "minLength": 8,
                        "description": "User password",
                        "example": "password"
                    }
                },
                "required": ["username", "password"]
            }
        }
    },
    "paths": {
        "/api/v1/reagents/": {
            "get": {
                "summary": "Retrieves a list of reagents with metadata for available pages",
                "tags": ["Reagents"],
                "description": "Retrieve a list of available reagents.",
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "query",
                        "description": "A search query to filter reagents by name, description, etc."
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "default": 1
                        },
                        "in": "query",
                        "name": "page",
                        "description": "The page number for pagination. Default is 1."
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "maximum": 100,
                            "default": 10
                        },
                        "in": "query",
                        "name": "limit",
                        "description": "The number of results per page. Max is 100. Default is 10."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "name",
                                "description",
                                "structure",
                                "category",
                                "quantity",
                                "status",
                                "expirationDate",
                                "storageLocation",
                                "cas",
                                "producer",
                                "catalogId",
                                "catalogLink",
                                "pricePerUnit",
                                "createdAt",
                                "updatedAt"
                            ],
                            "default": "name"
                        },
                        "in": "query",
                        "name": "sortBy",
                        "description": "The field by which the results should be sorted. Default is 'name'."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": ["asc", "desc"],
                            "default": "asc"
                        },
                        "in": "query",
                        "name": "sortOrder",
                        "description": "The sort order: 'asc' for ascending, 'desc' for descending. Default is 'asc'."
                    },
                    {
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "name",
                                            "description",
                                            "room",
                                            "structure",
                                            "cas",
                                            "producer",
                                            "catalogId",
                                            "catalogLink"
                                        ]
                                    }
                                },
                                {
                                    "type": "string",
                                    "enum": [
                                        "name",
                                        "description",
                                        "room",
                                        "structure",
                                        "cas",
                                        "producer",
                                        "catalogId",
                                        "catalogLink"
                                    ]
                                }
                            ]
                        },
                        "in": "query",
                        "name": "searchBy",
                        "description": "Fields to search by. Can be a single value or an array of values."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": ["sample", "reagent"]
                        },
                        "in": "query",
                        "name": "category",
                        "description": "Filter reagents by category, such as 'sample' or 'reagent'."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "available",
                                "lowStock",
                                "outOfStock",
                                "ordered",
                                "notAvailable"
                            ]
                        },
                        "in": "query",
                        "name": "status",
                        "description": "Filter reagents by status. Options include 'available', 'lowStock', 'outOfStock', 'ordered', or 'notAvailable'."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "storageLocation",
                        "description": "Filter reagents by their storage location."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reagents list with metadata.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "unit": {
                                                        "type": "string",
                                                        "enum": ["ml", "l", "mg", "g", "oz", "lb"]
                                                    },
                                                    "container": {
                                                        "type": "string",
                                                        "nullable": true,
                                                        "enum": ["bottle", "box", "other", null]
                                                    },
                                                    "currency": {
                                                        "type": "string",
                                                        "enum": ["usd", "euro", "rub", "cny", "jpy"]
                                                    },
                                                    "category": {
                                                        "type": "string",
                                                        "enum": ["reagent", "sample"]
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "nullable": true,
                                                        "enum": [
                                                            "organic",
                                                            "inorganic",
                                                            "acidic",
                                                            "basic",
                                                            "oxidizing",
                                                            "reducing",
                                                            "precipitating",
                                                            "complexing",
                                                            "indicator",
                                                            "other",
                                                            null
                                                        ]
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "nullable": true,
                                                        "enum": [
                                                            "available",
                                                            "lowStock",
                                                            "outOfStock",
                                                            "ordered",
                                                            "notAvailable",
                                                            null
                                                        ]
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "structure": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "quantity": {
                                                        "type": "number"
                                                    },
                                                    "quantityInit": {
                                                        "type": "number",
                                                        "nullable": true
                                                    },
                                                    "expirationDate": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "storageLocation": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "cas": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "producer": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "catalogId": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "catalogLink": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "pricePerUnit": {
                                                        "type": "number",
                                                        "nullable": true
                                                    },
                                                    "deletedAt": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "createdAt": {
                                                        "type": "string"
                                                    },
                                                    "updatedAt": {
                                                        "type": "string"
                                                    },
                                                    "storageId": {
                                                        "type": "string",
                                                        "nullable": true,
                                                        "format": "uuid"
                                                    }
                                                },
                                                "required": [
                                                    "unit",
                                                    "currency",
                                                    "category",
                                                    "id",
                                                    "name",
                                                    "description",
                                                    "quantity",
                                                    "createdAt",
                                                    "updatedAt"
                                                ]
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "currentPage": {
                                                    "type": "number",
                                                    "default": 1
                                                },
                                                "totalPages": {
                                                    "type": "number",
                                                    "default": 4
                                                },
                                                "totalCount": {
                                                    "type": "number",
                                                    "default": 2
                                                },
                                                "hasNextPage": {
                                                    "type": "boolean",
                                                    "default": true
                                                },
                                                "hasPreviousPage": {
                                                    "type": "boolean",
                                                    "default": false
                                                }
                                            },
                                            "required": [
                                                "currentPage",
                                                "totalPages",
                                                "totalCount",
                                                "hasNextPage",
                                                "hasPreviousPage"
                                            ]
                                        }
                                    },
                                    "required": ["data", "meta"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/reagents/{id}": {
            "get": {
                "summary": "Retrieves a specific reagent by ID",
                "tags": ["Reagents"],
                "description": "Retrieve reagent data by id.",
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Reagent's UUID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The requested reagent.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "unit": {
                                            "type": "string",
                                            "enum": ["ml", "l", "mg", "g", "oz", "lb"]
                                        },
                                        "container": {
                                            "type": "string",
                                            "nullable": true,
                                            "enum": ["bottle", "box", "other", null]
                                        },
                                        "currency": {
                                            "type": "string",
                                            "enum": ["usd", "euro", "rub", "cny", "jpy"]
                                        },
                                        "category": {
                                            "type": "string",
                                            "enum": ["reagent", "sample"]
                                        },
                                        "type": {
                                            "type": "string",
                                            "nullable": true,
                                            "enum": [
                                                "organic",
                                                "inorganic",
                                                "acidic",
                                                "basic",
                                                "oxidizing",
                                                "reducing",
                                                "precipitating",
                                                "complexing",
                                                "indicator",
                                                "other",
                                                null
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "nullable": true,
                                            "enum": [
                                                "available",
                                                "lowStock",
                                                "outOfStock",
                                                "ordered",
                                                "notAvailable",
                                                null
                                            ]
                                        },
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "structure": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "quantity": {
                                            "type": "number"
                                        },
                                        "quantityInit": {
                                            "type": "number",
                                            "nullable": true
                                        },
                                        "expirationDate": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "storageLocation": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "cas": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "producer": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "catalogId": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "catalogLink": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "pricePerUnit": {
                                            "type": "number",
                                            "nullable": true
                                        },
                                        "deletedAt": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "createdAt": {
                                            "type": "string"
                                        },
                                        "updatedAt": {
                                            "type": "string"
                                        },
                                        "storageId": {
                                            "type": "string",
                                            "nullable": true,
                                            "format": "uuid"
                                        }
                                    },
                                    "required": [
                                        "unit",
                                        "currency",
                                        "category",
                                        "id",
                                        "name",
                                        "description",
                                        "quantity",
                                        "createdAt",
                                        "updatedAt"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error - Invalid id.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "Validation error"
                                        }
                                    },
                                    "required": ["message"]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested reagent was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "Reagent not found"
                                        }
                                    },
                                    "required": ["message"]
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Soft deletes reagent by id",
                "tags": ["Reagents"],
                "description": "Soft delete reagent by id.",
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Reagent's UUID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reagent data with updated 'deletedAt' field.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "unit": {
                                            "type": "string",
                                            "enum": ["ml", "l", "mg", "g", "oz", "lb"]
                                        },
                                        "container": {
                                            "type": "string",
                                            "nullable": true,
                                            "enum": ["bottle", "box", "other", null]
                                        },
                                        "currency": {
                                            "type": "string",
                                            "enum": ["usd", "euro", "rub", "cny", "jpy"]
                                        },
                                        "category": {
                                            "type": "string",
                                            "enum": ["reagent", "sample"]
                                        },
                                        "type": {
                                            "type": "string",
                                            "nullable": true,
                                            "enum": [
                                                "organic",
                                                "inorganic",
                                                "acidic",
                                                "basic",
                                                "oxidizing",
                                                "reducing",
                                                "precipitating",
                                                "complexing",
                                                "indicator",
                                                "other",
                                                null
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "nullable": true,
                                            "enum": [
                                                "available",
                                                "lowStock",
                                                "outOfStock",
                                                "ordered",
                                                "notAvailable",
                                                null
                                            ]
                                        },
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "structure": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "quantity": {
                                            "type": "number"
                                        },
                                        "quantityInit": {
                                            "type": "number",
                                            "nullable": true
                                        },
                                        "expirationDate": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "storageLocation": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "cas": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "producer": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "catalogId": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "catalogLink": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "pricePerUnit": {
                                            "type": "number",
                                            "nullable": true
                                        },
                                        "deletedAt": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "createdAt": {
                                            "type": "string"
                                        },
                                        "updatedAt": {
                                            "type": "string"
                                        },
                                        "storageId": {
                                            "type": "string",
                                            "nullable": true,
                                            "format": "uuid"
                                        }
                                    },
                                    "required": [
                                        "unit",
                                        "currency",
                                        "category",
                                        "id",
                                        "name",
                                        "description",
                                        "quantity",
                                        "createdAt",
                                        "updatedAt"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error - Invalid id.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "Validation error"
                                        }
                                    },
                                    "required": ["message"]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested reagent was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "Reagent not found"
                                        }
                                    },
                                    "required": ["message"]
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Reverts the soft delete of a reagent by ID",
                "tags": ["Reagents"],
                "description": "Revert soft delete reagent by id.",
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Reagent's UUID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reagent data with nullified 'deletedAt' field.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "unit": {
                                            "type": "string",
                                            "enum": ["ml", "l", "mg", "g", "oz", "lb"]
                                        },
                                        "container": {
                                            "type": "string",
                                            "nullable": true,
                                            "enum": ["bottle", "box", "other", null]
                                        },
                                        "currency": {
                                            "type": "string",
                                            "enum": ["usd", "euro", "rub", "cny", "jpy"]
                                        },
                                        "category": {
                                            "type": "string",
                                            "enum": ["reagent", "sample"]
                                        },
                                        "type": {
                                            "type": "string",
                                            "nullable": true,
                                            "enum": [
                                                "organic",
                                                "inorganic",
                                                "acidic",
                                                "basic",
                                                "oxidizing",
                                                "reducing",
                                                "precipitating",
                                                "complexing",
                                                "indicator",
                                                "other",
                                                null
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "nullable": true,
                                            "enum": [
                                                "available",
                                                "lowStock",
                                                "outOfStock",
                                                "ordered",
                                                "notAvailable",
                                                null
                                            ]
                                        },
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "structure": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "quantity": {
                                            "type": "number"
                                        },
                                        "quantityInit": {
                                            "type": "number",
                                            "nullable": true
                                        },
                                        "expirationDate": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "storageLocation": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "cas": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "producer": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "catalogId": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "catalogLink": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "pricePerUnit": {
                                            "type": "number",
                                            "nullable": true
                                        },
                                        "deletedAt": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "createdAt": {
                                            "type": "string"
                                        },
                                        "updatedAt": {
                                            "type": "string"
                                        },
                                        "storageId": {
                                            "type": "string",
                                            "nullable": true,
                                            "format": "uuid"
                                        }
                                    },
                                    "required": [
                                        "unit",
                                        "currency",
                                        "category",
                                        "id",
                                        "name",
                                        "description",
                                        "quantity",
                                        "createdAt",
                                        "updatedAt"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error - Invalid id.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "Validation error"
                                        }
                                    },
                                    "required": ["message"]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested reagent was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "Reagent not found"
                                        }
                                    },
                                    "required": ["message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/samples/": {
            "get": {
                "summary": "Retrieves a list of samples",
                "tags": ["Samples"],
                "description": "Retrieve a list of available samples.",
                "responses": {
                    "200": {
                        "description": "Samples list.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "unit": {
                                                "type": "string",
                                                "enum": ["ml", "l", "mg", "g", "oz", "lb"]
                                            },
                                            "category": {
                                                "type": "string",
                                                "enum": ["reagent", "sample"]
                                            },
                                            "container": {
                                                "type": "string",
                                                "nullable": true,
                                                "enum": ["bottle", "box", "other", null]
                                            },
                                            "id": {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "structure": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "description": {
                                                "type": "string"
                                            },
                                            "quantity": {
                                                "type": "number"
                                            },
                                            "quantityInit": {
                                                "type": "number",
                                                "nullable": true
                                            },
                                            "storageLocation": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "deletedAt": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "createdAt": {
                                                "type": "string"
                                            },
                                            "updatedAt": {
                                                "type": "string"
                                            },
                                            "storageId": {
                                                "type": "string",
                                                "format": "uuid"
                                            }
                                        },
                                        "required": [
                                            "unit",
                                            "category",
                                            "id",
                                            "name",
                                            "description",
                                            "quantity",
                                            "createdAt",
                                            "updatedAt",
                                            "storageId"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "summary": "Generates access token for user.",
                "tags": ["Auth"],
                "description": "Log in a user.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserLogin"
                            }
                        }
                    }
                },
                "security": [],
                "responses": {
                    "200": {
                        "description": "Authorization JWT token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "default": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIzMmI0YTM2Ni0wYzFjLTQ3MWMtOTYyNS1jMmE4NGQyNzZlZGMiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE3MzE3NzQ5MzcsImV4cCI6MTczMTc3ODUzN30.EH7O3eh1NK3wGaA0G7Iee31fuZYyCmrUspz_71zdqKc"
                                        }
                                    },
                                    "required": ["token"]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error - Missing fields",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "statusCode": {
                                            "type": "number",
                                            "default": 400
                                        },
                                        "code": {
                                            "type": "string",
                                            "default": "FST_ERR_VALIDATION"
                                        },
                                        "error": {
                                            "type": "string",
                                            "default": "Bad Request"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "body/username Required"
                                        }
                                    },
                                    "required": ["statusCode", "code", "error", "message"]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Incorrect credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "Invalid username or password."
                                        }
                                    },
                                    "required": ["message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/users/": {
            "get": {
                "summary": "Retrieves a list of users",
                "tags": ["Users"],
                "description": "Retrieve all available users in the system.",
                "responses": {
                    "200": {
                        "description": "List of users.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "role": {
                                                "type": "string",
                                                "enum": [
                                                    "admin",
                                                    "procurementOfficer",
                                                    "researcher"
                                                ]
                                            },
                                            "id": {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "username": {
                                                "type": "string"
                                            },
                                            "firstName": {
                                                "type": "string"
                                            },
                                            "lastName": {
                                                "type": "string"
                                            },
                                            "email": {
                                                "type": "string"
                                            },
                                            "lastLoginDate": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "createdAt": {
                                                "type": "string"
                                            },
                                            "updatedAt": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "role",
                                            "id",
                                            "username",
                                            "firstName",
                                            "lastName",
                                            "email",
                                            "createdAt",
                                            "updatedAt"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error - Unauthorized.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "statusCode": {
                                            "type": "number",
                                            "default": 401
                                        },
                                        "code": {
                                            "type": "string",
                                            "default": "FST_JWT_NO_AUTHORIZATION_IN_HEADER"
                                        },
                                        "error": {
                                            "type": "string",
                                            "default": "Unauthorized"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "No Authorization was found in request.headers"
                                        }
                                    },
                                    "required": ["statusCode", "code", "error", "message"]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates new user",
                "tags": ["Users"],
                "description": "Create user in the system.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 50
                                    },
                                    "firstName": {
                                        "type": "string",
                                        "minLength": 1
                                    },
                                    "lastName": {
                                        "type": "string",
                                        "minLength": 1
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 8,
                                        "example": "password"
                                    },
                                    "confirmPassword": {
                                        "type": "string",
                                        "minLength": 8,
                                        "example": "confirmPassword"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": ["admin", "researcher", "procurementOfficer"]
                                    },
                                    "createdAt": {
                                        "type": "string"
                                    },
                                    "updatedAt": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "username",
                                    "firstName",
                                    "lastName",
                                    "email",
                                    "password",
                                    "confirmPassword",
                                    "role"
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created user's details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "role": {
                                            "type": "string",
                                            "enum": ["admin", "procurementOfficer", "researcher"]
                                        },
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "username": {
                                            "type": "string"
                                        },
                                        "firstName": {
                                            "type": "string"
                                        },
                                        "lastName": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "lastLoginDate": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "createdAt": {
                                            "type": "string"
                                        },
                                        "updatedAt": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "role",
                                        "id",
                                        "username",
                                        "firstName",
                                        "lastName",
                                        "email",
                                        "createdAt",
                                        "updatedAt"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error - Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "statusCode": {
                                            "type": "number",
                                            "default": 400
                                        },
                                        "code": {
                                            "type": "string",
                                            "default": "FST_ERR_VALIDATION"
                                        },
                                        "error": {
                                            "type": "string",
                                            "default": "Bad Request"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "body/password Password must be at least 8 characters long."
                                        }
                                    },
                                    "required": ["statusCode", "code", "error", "message"]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error - Unauthorized.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "statusCode": {
                                            "type": "number",
                                            "default": 401
                                        },
                                        "code": {
                                            "type": "string",
                                            "default": "FST_JWT_NO_AUTHORIZATION_IN_HEADER"
                                        },
                                        "error": {
                                            "type": "string",
                                            "default": "Unauthorized"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "No Authorization was found in request.headers"
                                        }
                                    },
                                    "required": ["statusCode", "code", "error", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/users/{userId}": {
            "get": {
                "summary": "Retrieves user by id",
                "tags": ["Users"],
                "description": "Retrieve a specific user by id.",
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "description": "User's UUID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User's details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "role": {
                                            "type": "string",
                                            "enum": ["admin", "procurementOfficer", "researcher"]
                                        },
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "username": {
                                            "type": "string"
                                        },
                                        "firstName": {
                                            "type": "string"
                                        },
                                        "lastName": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "lastLoginDate": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "createdAt": {
                                            "type": "string"
                                        },
                                        "updatedAt": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "role",
                                        "id",
                                        "username",
                                        "firstName",
                                        "lastName",
                                        "email",
                                        "createdAt",
                                        "updatedAt"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error - Unauthorized.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "statusCode": {
                                            "type": "number",
                                            "default": 401
                                        },
                                        "code": {
                                            "type": "string",
                                            "default": "FST_JWT_NO_AUTHORIZATION_IN_HEADER"
                                        },
                                        "error": {
                                            "type": "string",
                                            "default": "Unauthorized"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "No Authorization was found in request.headers"
                                        }
                                    },
                                    "required": ["statusCode", "code", "error", "message"]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error - User not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "User not found"
                                        }
                                    },
                                    "required": ["message"]
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Updates user details by id",
                "tags": ["Users"],
                "description": "Update user information by id.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "firstName": {
                                        "type": "string",
                                        "minLength": 1
                                    },
                                    "lastName": {
                                        "type": "string",
                                        "minLength": 1
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "default": "newEmail@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 8,
                                        "default": "newPassword"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": ["admin", "researcher", "procurementOfficer"]
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "description": "User's UUID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated user information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "role": {
                                            "type": "string",
                                            "enum": ["admin", "procurementOfficer", "researcher"]
                                        },
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "username": {
                                            "type": "string"
                                        },
                                        "firstName": {
                                            "type": "string"
                                        },
                                        "lastName": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "lastLoginDate": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "createdAt": {
                                            "type": "string"
                                        },
                                        "updatedAt": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "role",
                                        "id",
                                        "username",
                                        "firstName",
                                        "lastName",
                                        "email",
                                        "createdAt",
                                        "updatedAt"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error - Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "statusCode": {
                                            "type": "number",
                                            "default": 400
                                        },
                                        "code": {
                                            "type": "string",
                                            "default": "FST_ERR_VALIDATION"
                                        },
                                        "error": {
                                            "type": "string",
                                            "default": "Bad Request"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "body/password Password must be at least 8 characters long."
                                        }
                                    },
                                    "required": ["statusCode", "code", "error", "message"]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error - Unauthorized.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "statusCode": {
                                            "type": "number",
                                            "default": 401
                                        },
                                        "code": {
                                            "type": "string",
                                            "default": "FST_JWT_NO_AUTHORIZATION_IN_HEADER"
                                        },
                                        "error": {
                                            "type": "string",
                                            "default": "Unauthorized"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "No Authorization was found in request.headers"
                                        }
                                    },
                                    "required": ["statusCode", "code", "error", "message"]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error - User not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "User not found"
                                        }
                                    },
                                    "required": ["message"]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error - Update failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "User update failed"
                                        }
                                    },
                                    "required": ["message"]
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Deletes user by id",
                "tags": ["Users"],
                "description": "Delete a specific user by id.",
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "description": "User's UUID."
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "User deleted successfully"
                                        }
                                    },
                                    "required": ["message"]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error - Unauthorized.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "statusCode": {
                                            "type": "number",
                                            "default": 401
                                        },
                                        "code": {
                                            "type": "string",
                                            "default": "FST_JWT_NO_AUTHORIZATION_IN_HEADER"
                                        },
                                        "error": {
                                            "type": "string",
                                            "default": "Unauthorized"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "No Authorization was found in request.headers"
                                        }
                                    },
                                    "required": ["statusCode", "code", "error", "message"]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error - User not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "User not found"
                                        }
                                    },
                                    "required": ["message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/storage-locations/": {
            "get": {
                "summary": "Retrieves available storage locations with metadata for available pages",
                "tags": ["Storage Locations"],
                "description": "Retrieve available storage locations.",
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "query",
                        "description": "A general search term to filter storage locations."
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "default": 1
                        },
                        "in": "query",
                        "name": "page",
                        "description": "The page number for pagination. Default is 1."
                    },
                    {
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "maximum": 100,
                            "default": 10
                        },
                        "in": "query",
                        "name": "limit",
                        "description": "The number of results per page. Default is 10, max is 100."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": ["name", "room", "description", "createdAt", "updatedAt"],
                            "default": "name"
                        },
                        "in": "query",
                        "name": "sortBy",
                        "description": "The field to sort results by. Default is 'name'."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": ["asc", "desc"],
                            "default": "asc"
                        },
                        "in": "query",
                        "name": "sortOrder",
                        "description": "The sort order, either 'asc' for ascending or 'desc' for descending. Default is 'asc'."
                    },
                    {
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": ["name", "room", "description"]
                                    }
                                },
                                {
                                    "type": "string",
                                    "enum": ["name", "room", "description"]
                                }
                            ]
                        },
                        "in": "query",
                        "name": "searchBy",
                        "description": "Specific fields to search within. Can be a single field or an array of fields."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "room",
                        "description": "Filter results by room name or identifier."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "name",
                        "description": "Filter results by the name of the storage location."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Locations list.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "room": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "deletedAt": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "createdAt": {
                                                        "type": "string"
                                                    },
                                                    "updatedAt": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "room",
                                                    "name",
                                                    "createdAt",
                                                    "updatedAt"
                                                ]
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "currentPage": {
                                                    "type": "number",
                                                    "default": 1
                                                },
                                                "totalPages": {
                                                    "type": "number",
                                                    "default": 4
                                                },
                                                "totalCount": {
                                                    "type": "number",
                                                    "default": 2
                                                },
                                                "hasNextPage": {
                                                    "type": "boolean",
                                                    "default": true
                                                },
                                                "hasPreviousPage": {
                                                    "type": "boolean",
                                                    "default": false
                                                }
                                            },
                                            "required": [
                                                "currentPage",
                                                "totalPages",
                                                "totalCount",
                                                "hasNextPage",
                                                "hasPreviousPage"
                                            ]
                                        }
                                    },
                                    "required": ["data", "meta"]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error - Unauthorized.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "statusCode": {
                                            "type": "number",
                                            "default": 401
                                        },
                                        "code": {
                                            "type": "string",
                                            "default": "FST_JWT_NO_AUTHORIZATION_IN_HEADER"
                                        },
                                        "error": {
                                            "type": "string",
                                            "default": "Unauthorized"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "No Authorization was found in request.headers"
                                        }
                                    },
                                    "required": ["statusCode", "code", "error", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/storage-locations/{id}": {
            "get": {
                "summary": "Retrieves specific storage location by id",
                "tags": ["Storage Locations"],
                "description": "Retrieve a specific storage location by id.",
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Storage location UUID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Storage location data.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "room": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "deletedAt": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "createdAt": {
                                            "type": "string"
                                        },
                                        "updatedAt": {
                                            "type": "string"
                                        }
                                    },
                                    "required": ["id", "room", "name", "createdAt", "updatedAt"]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error - Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "Validation error"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "validation": {
                                                        "type": "string",
                                                        "default": "uuid"
                                                    },
                                                    "code": {
                                                        "type": "string",
                                                        "default": "invalid_string"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "default": "Invalid uuid"
                                                    },
                                                    "path": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "required": [
                                                    "validation",
                                                    "code",
                                                    "message",
                                                    "path"
                                                ]
                                            }
                                        }
                                    },
                                    "required": ["message", "errors"]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error - Unauthorized.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "statusCode": {
                                            "type": "number",
                                            "default": 401
                                        },
                                        "code": {
                                            "type": "string",
                                            "default": "FST_JWT_NO_AUTHORIZATION_IN_HEADER"
                                        },
                                        "error": {
                                            "type": "string",
                                            "default": "Unauthorized"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "No Authorization was found in request.headers"
                                        }
                                    },
                                    "required": ["statusCode", "code", "error", "message"]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error - Not Found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "Storage location not found"
                                        }
                                    },
                                    "required": ["message"]
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Soft deletes storage location by id",
                "tags": ["Storage Locations"],
                "description": "Soft delete of storage location by id.",
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Storage location UUID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Storage location data with updated or same 'deletedAt' field.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "room": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "deletedAt": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "createdAt": {
                                            "type": "string"
                                        },
                                        "updatedAt": {
                                            "type": "string"
                                        }
                                    },
                                    "required": ["id", "room", "name", "createdAt", "updatedAt"]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error - Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "Validation error"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "validation": {
                                                        "type": "string",
                                                        "default": "uuid"
                                                    },
                                                    "code": {
                                                        "type": "string",
                                                        "default": "invalid_string"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "default": "Invalid uuid"
                                                    },
                                                    "path": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "required": [
                                                    "validation",
                                                    "code",
                                                    "message",
                                                    "path"
                                                ]
                                            }
                                        }
                                    },
                                    "required": ["message", "errors"]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error - Not Found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "Storage location not found"
                                        }
                                    },
                                    "required": ["message"]
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Reverts the soft delete of a storage location by ID",
                "tags": ["Storage Locations"],
                "description": "Revert soft delete of storage location by id.",
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Storage location UUID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Storage location data with nullified 'deletedAt' field.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "room": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "deletedAt": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "createdAt": {
                                            "type": "string"
                                        },
                                        "updatedAt": {
                                            "type": "string"
                                        }
                                    },
                                    "required": ["id", "room", "name", "createdAt", "updatedAt"]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error - Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "Validation error"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "validation": {
                                                        "type": "string",
                                                        "default": "uuid"
                                                    },
                                                    "code": {
                                                        "type": "string",
                                                        "default": "invalid_string"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "default": "Invalid uuid"
                                                    },
                                                    "path": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "required": [
                                                    "validation",
                                                    "code",
                                                    "message",
                                                    "path"
                                                ]
                                            }
                                        }
                                    },
                                    "required": ["message", "errors"]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error - Not Found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "Storage location not found"
                                        }
                                    },
                                    "required": ["message"]
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "security": [
        {
            "BearerAuth": []
        }
    ]
}
